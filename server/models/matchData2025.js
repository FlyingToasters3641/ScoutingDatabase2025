const { Model, DataTypes } = require('sequelize');
const sequelize = require('../database'); // Adjust the path as needed


class MatchData2025 extends Model {}

// Changes
// v1: Initial version
// v2: Added autonReefLevel1Total-autonReefLevel4Total, teleopReefLevel1Total-teleopReefLevel4Total, totalReefLevel1-totalReefLevel4
// v3: Added schemaVersion, autonIntakeGround, autonIntakeStation, teleopIntakeGround, teleopIntakeStation
MatchData2025.init({
    schemaVersion: DataTypes.STRING,
    scouterName: DataTypes.STRING,
    matchNumber: DataTypes.INTEGER,
    teamNumber: DataTypes.INTEGER,
    allianceLocation: DataTypes.STRING,
    eventKey: DataTypes.STRING,
    matchKey: DataTypes.STRING,
    event_id: DataTypes.INTEGER,
    uniqueId: DataTypes.STRING,
    fieldOrientation: DataTypes.STRING,

    autonPosition: DataTypes.STRING,
    autonLeave: DataTypes.BOOLEAN,
    autonCoralMissed: DataTypes.INTEGER,
    autonNetScored: DataTypes.INTEGER,
    autonNetMissed: DataTypes.INTEGER,
    autonProcessorScored: DataTypes.INTEGER,
    autonProcessorMissed: DataTypes.INTEGER,
    autonCoralGroundPickup: DataTypes.INTEGER,
    autonCoralStationPickup: DataTypes.INTEGER,
    autonAlgaePickup: DataTypes.INTEGER,
    autonReefLevel1A: DataTypes.INTEGER,
    autonReefLevel2A: DataTypes.INTEGER,
    autonReefLevel3A: DataTypes.INTEGER,
    autonReefLevel4A: DataTypes.INTEGER,
    autonReefLevel1C: DataTypes.INTEGER,
    autonReefLevel2C: DataTypes.INTEGER,
    autonReefLevel3C: DataTypes.INTEGER,
    autonReefLevel4C: DataTypes.INTEGER,
    autonReefLevel1E: DataTypes.INTEGER,
    autonReefLevel2E: DataTypes.INTEGER,
    autonReefLevel3E: DataTypes.INTEGER,
    autonReefLevel4E: DataTypes.INTEGER,
    autonReefLevel1G: DataTypes.INTEGER,
    autonReefLevel2G: DataTypes.INTEGER,
    autonReefLevel3G: DataTypes.INTEGER,
    autonReefLevel4G: DataTypes.INTEGER,
    autonReefLevel1I: DataTypes.INTEGER,
    autonReefLevel2I: DataTypes.INTEGER,
    autonReefLevel3I: DataTypes.INTEGER,
    autonReefLevel4I: DataTypes.INTEGER,
    autonReefLevel1K: DataTypes.INTEGER,
    autonReefLevel2K: DataTypes.INTEGER,
    autonReefLevel3K: DataTypes.INTEGER,
    autonReefLevel4K: DataTypes.INTEGER,
    autonReefLevel1Total: DataTypes.INTEGER,
    autonReefLevel2Total: DataTypes.INTEGER,  
    autonReefLevel3Total: DataTypes.INTEGER,
    autonReefLevel4Total: DataTypes.INTEGER,
    autonReefTotal: DataTypes.INTEGER,
    autoAlgaeRemovedA: DataTypes.BOOLEAN,
    autoAlgaeRemovedB: DataTypes.BOOLEAN,
    autoAlgaeRemovedC: DataTypes.BOOLEAN,
    autoAlgaeRemovedD: DataTypes.BOOLEAN,
    autoAlgaeRemovedE: DataTypes.BOOLEAN,
    autoAlgaeRemovedF: DataTypes.BOOLEAN,
    autonAlgeaRemovedTotal: DataTypes.INTEGER,

    teleopCoralMissed: DataTypes.INTEGER,
    teleopNetScored: DataTypes.INTEGER,
    teleopNetMissed: DataTypes.INTEGER,
    teleopProcessorScored: DataTypes.INTEGER,
    teleopProcessorMissed: DataTypes.INTEGER,
    teleopCoralGroundPickup: DataTypes.INTEGER,
    teleopCoralStationPickup: DataTypes.INTEGER,
    teleopAlgaePickup: DataTypes.INTEGER,
    teleopReefLevel1A: DataTypes.INTEGER,
    teleopReefLevel2A: DataTypes.INTEGER,
    teleopReefLevel3A: DataTypes.INTEGER,
    teleopReefLevel4A: DataTypes.INTEGER,
    teleopReefLevel1C: DataTypes.INTEGER,
    teleopReefLevel2C: DataTypes.INTEGER,
    teleopReefLevel3C: DataTypes.INTEGER,
    teleopReefLevel4C: DataTypes.INTEGER,
    teleopReefLevel1E: DataTypes.INTEGER,
    teleopReefLevel2E: DataTypes.INTEGER,
    teleopReefLevel3E: DataTypes.INTEGER,
    teleopReefLevel4E: DataTypes.INTEGER,
    teleopReefLevel1G: DataTypes.INTEGER,
    teleopReefLevel2G: DataTypes.INTEGER,
    teleopReefLevel3G: DataTypes.INTEGER,
    teleopReefLevel4G: DataTypes.INTEGER,
    teleopReefLevel1I: DataTypes.INTEGER,
    teleopReefLevel2I: DataTypes.INTEGER,
    teleopReefLevel3I: DataTypes.INTEGER,
    teleopReefLevel4I: DataTypes.INTEGER,
    teleopReefLevel1K: DataTypes.INTEGER,
    teleopReefLevel2K: DataTypes.INTEGER,
    teleopReefLevel3K: DataTypes.INTEGER,
    teleopReefLevel4K: DataTypes.INTEGER,
    teleopReefLevel1Total: DataTypes.INTEGER,
    teleopReefLevel2Total: DataTypes.INTEGER,
    teleopReefLevel3Total: DataTypes.INTEGER,
    teleopReefLevel4Total: DataTypes.INTEGER,
    teleopReefTotal: DataTypes.INTEGER,
    teleopAlgaeRemovedA: DataTypes.BOOLEAN,
    teleopAlgaeRemovedB: DataTypes.BOOLEAN,
    teleopAlgaeRemovedC: DataTypes.BOOLEAN,
    teleopAlgaeRemovedD: DataTypes.BOOLEAN,
    teleopAlgaeRemovedE: DataTypes.BOOLEAN,
    teleopAlgaeRemovedF: DataTypes.BOOLEAN,
    teleopAlgeaRemovedTotal: DataTypes.INTEGER,
    
    coralIntakeTypeGround: DataTypes.BOOLEAN,
    coralIntakeTypeStation: DataTypes.BOOLEAN,
    bargeZonLocation: DataTypes.STRING,
    scouterNotesPicklist: DataTypes.STRING,
    scouterNotesOther: DataTypes.STRING,

    totalReefLevel1: DataTypes.INTEGER,
    totalReefLevel2: DataTypes.INTEGER,
    totalReefLevel3: DataTypes.INTEGER,
    totalReefLevel4: DataTypes.INTEGER,
    totalReef: DataTypes.INTEGER,

    totalCoralMissed: DataTypes.INTEGER,
    totalNetScored: DataTypes.INTEGER,
    totalNetMissed: DataTypes.INTEGER,
    totalProcessorScored: DataTypes.INTEGER,
    totalProcessorMissed: DataTypes.INTEGER,


    totalAlgeaRemoved: DataTypes.INTEGER,
    totalCoralGroundPickup: DataTypes.INTEGER,
    totalCoralStationPickup: DataTypes.INTEGER,
    totalAlgaePickup: DataTypes.INTEGER
}, { sequelize, modelName: 'matchdata2025' });

module.exports = MatchData2025;