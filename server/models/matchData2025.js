const { Model, DataTypes } = require('sequelize');
const sequelize = require('../database'); // Adjust the path as needed


class MatchData2025 extends Model {}

MatchData2025.init({
    scouterName: DataTypes.STRING,
    matchNumber: DataTypes.INTEGER,
    teamNumber: DataTypes.INTEGER,
    eventKey: DataTypes.STRING,
    matchKey: DataTypes.STRING,
    event_id: DataTypes.INTEGER,
    uniqueId: DataTypes.STRING,
    fieldOrientation: DataTypes.STRING,
    autonPosition: DataTypes.INTEGER,
    autonLeave: DataTypes.BOOLEAN,
    autonCoralMissed: DataTypes.INTEGER,
    autonNetScored: DataTypes.INTEGER,
    autonNetMissed: DataTypes.INTEGER,
    autonProcessorScored: DataTypes.INTEGER,
    autonProcessorMissed: DataTypes.INTEGER,
    autonCoralGroundPickup: DataTypes.INTEGER,
    autonCoralStationPickup: DataTypes.INTEGER,
    autonAlgaePickup: DataTypes.INTEGER,
    autonReefLevel1A: DataTypes.INTEGER,
    autonReefLevel2A: DataTypes.INTEGER,
    autonReefLevel3A: DataTypes.INTEGER,
    autonReefLevel4A: DataTypes.INTEGER,
    autonReefLevel1C: DataTypes.INTEGER,
    autonReefLevel2C: DataTypes.INTEGER,
    autonReefLevel3C: DataTypes.INTEGER,
    autonReefLevel4C: DataTypes.INTEGER,
    autonReefLevel1E: DataTypes.INTEGER,
    autonReefLevel2E: DataTypes.INTEGER,
    autonReefLevel3E: DataTypes.INTEGER,
    autonReefLevel4E: DataTypes.INTEGER,
    autonReefLevel1G: DataTypes.INTEGER,
    autonReefLevel2G: DataTypes.INTEGER,
    autonReefLevel3G: DataTypes.INTEGER,
    autonReefLevel4G: DataTypes.INTEGER,
    autonReefLevel1I: DataTypes.INTEGER,
    autonReefLevel2I: DataTypes.INTEGER,
    autonReefLevel3I: DataTypes.INTEGER,
    autonReefLevel4I: DataTypes.INTEGER,
    autonReefLevel1K: DataTypes.INTEGER,
    autonReefLevel2K: DataTypes.INTEGER,
    autonReefLevel3K: DataTypes.INTEGER,
    autonReefLevel4K: DataTypes.INTEGER,
    autonReefTotal: DataTypes.INTEGER,
    autoAlgaeRemovedA: DataTypes.INTEGER,
    autoAlgaeRemovedC: DataTypes.INTEGER,
    autoAlgaeRemovedE: DataTypes.INTEGER,
    autoAlgaeRemovedG: DataTypes.INTEGER,
    autoAlgaeRemovedI: DataTypes.INTEGER,
    autoAlgaeRemovedK: DataTypes.INTEGER,
    autonAlgeaRemovedTotal: DataTypes.INTEGER,
    teleopCoralMissed: DataTypes.INTEGER,
    teleopNetScored: DataTypes.INTEGER,
    teleopNetMissed: DataTypes.INTEGER,
    teleopProcessorScored: DataTypes.INTEGER,
    teleopProcessorMissed: DataTypes.INTEGER,
    teleopCoralGroundPickup: DataTypes.INTEGER,
    teleopCoralStationPickup: DataTypes.INTEGER,
    teleopAlgaePickup: DataTypes.INTEGER,
    teleopReefLevel1A: DataTypes.INTEGER,
    teleopReefLevel2A: DataTypes.INTEGER,
    teleopReefLevel3A: DataTypes.INTEGER,
    teleopReefLevel4A: DataTypes.INTEGER,
    teleopReefLevel1C: DataTypes.INTEGER,
    teleopReefLevel2C: DataTypes.INTEGER,
    teleopReefLevel3C: DataTypes.INTEGER,
    teleopReefLevel4C: DataTypes.INTEGER,
    teleopReefLevel1E: DataTypes.INTEGER,
    teleopReefLevel2E: DataTypes.INTEGER,
    teleopReefLevel3E: DataTypes.INTEGER,
    teleopReefLevel4E: DataTypes.INTEGER,
    teleopReefLevel1G: DataTypes.INTEGER,
    teleopReefLevel2G: DataTypes.INTEGER,
    teleopReefLevel3G: DataTypes.INTEGER,
    teleopReefLevel4G: DataTypes.INTEGER,
    teleopReefLevel1I: DataTypes.INTEGER,
    teleopReefLevel2I: DataTypes.INTEGER,
    teleopReefLevel3I: DataTypes.INTEGER,
    teleopReefLevel4I: DataTypes.INTEGER,
    teleopReefLevel1K: DataTypes.INTEGER,
    teleopReefLevel2K: DataTypes.INTEGER,
    teleopReefLevel3K: DataTypes.INTEGER,
    teleopReefLevel4K: DataTypes.INTEGER,
    teleopReefTotal: DataTypes.INTEGER,
    teleopAlgaeRemovedA: DataTypes.INTEGER,
    teleopAlgaeRemovedC: DataTypes.INTEGER,
    teleopAlgaeRemovedE: DataTypes.INTEGER,
    teleopAlgaeRemovedG: DataTypes.INTEGER,
    teleopAlgaeRemovedI: DataTypes.INTEGER,
    teleopAlgaeRemovedK: DataTypes.INTEGER,
    teleopAlgeaRemovedTotal: DataTypes.INTEGER,
    reefTotal: DataTypes.INTEGER,
    algeaRemovedTotal: DataTypes.INTEGER,
    bargeZonLocation: DataTypes.STRING,
    scouterNotesPicklist: DataTypes.STRING,
    scouterNotesOther: DataTypes.STRING
}, { sequelize, modelName: 'matchdata2025' });

module.exports = MatchData2025;